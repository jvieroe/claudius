library(devtools)
library(roxygen2)
usethis::use_pipe()
document()
usethis::use_data_raw()
usethis::use_readme_rmd()
use_github_action_check_standard(
save_as = "R-CMD-check.yaml",
ignore = TRUE,
open = FALSE
)
document()
usethis::use_gpl3_license()
document()
check()
document()
check()
c(rgdal::make_EPSG()$code)
c(rgdal::make_EPSG()$code)
rgdal::make_EPSG()$code
126+16
142+71
## code to prepare `DATASET` dataset goes here
baselayer <- sf::read_sf("https://api.dataforsyningen.dk/regioner?format=geojson")
baselayer <- sf::st_transform(baselayer,
crs = 4326)
baselayer <- sf::st_union(baselayer)
baselayer <- geojsonio::geojson_json(baselayer)
usethis::use_data(baselayer, overwrite = TRUE, compress = "xz")
tools::add_datalist()
?add_datalist
getwd()
tools::add_datalist(pkgpath = "C:/Users/jevi/OneDrive - Epinion/Documents/GitHub/claudius")
library(devtools)
library(roxygen2)
document()
check()
?tools::resaveRdaFiles()
tools::resaveRdaFiles(paths = "C:/Users/jevi/OneDrive - Epinion/Documents/GitHub/claudius/data/baselayer.rda",
compress = "auto")
tools::add_datalist(pkgpath = "C:/Users/jevi/OneDrive - Epinion/Documents/GitHub/claudius")
document()
check()
CheckLazyDataCompression <- function(pkg)
{
pkg_name <- sub("_.*", "", pkg)
lib <- tempfile(); dir.create(lib)
zs <- c("gzip", "bzip2", "xz")
res <- integer(3); names(res) <- zs
for (z in zs) {
opts <- c(paste0("--data-compress=", z),
"--no-libs", "--no-help", "--no-demo", "--no-exec", "--no-test-load")
install.packages(pkg, lib, INSTALL_opts = opts, repos = NULL, quiet = TRUE)
res[z] <- file.size(file.path(lib, pkg_name, "data", "Rdata.rdb"))
}
ceiling(res/1024)
}
CheckLazyDataCompression <- function(pkg)
{
pkg_name <- sub("_.*", "", pkg)
lib <- tempfile(); dir.create(lib)
zs <- c("gzip", "bzip2", "xz")
res <- integer(3); names(res) <- zs
for (z in zs) {
opts <- c(paste0("--data-compress=", z),
"--no-libs", "--no-help", "--no-demo", "--no-exec", "--no-test-load")
install.packages(pkg, lib, INSTALL_opts = opts, repos = NULL, quiet = TRUE)
res[z] <- file.size(file.path(lib, pkg_name, "data", "Rdata.rdb"))
}
ceiling(res/1024)
}
CheckLazyDataCompression()
CheckLazyDataCompression("C:/Users/jevi/OneDrive - Epinion/Documents/GitHub/claudius")
CheckLazyDataCompression <- function(pkg)
{
pkg_name <- sub("_.*", "", pkg)
lib <- tempfile(); dir.create(lib)
zs <- c("gzip", "bzip2", "xz")
res <- integer(3); names(res) <- zs
for (z in zs) {
opts <- c(paste0("--data-compress=", z),
"--no-libs", "--no-help", "--no-demo", "--no-exec", "--no-test-load")
install.packages(pkg, lib, INSTALL_opts = opts, repos = NULL, quiet = TRUE)
res[z] <- file.size(file.path(lib, pkg_name, "data", "Rdata.rdb"))
}
ceiling(res/1024)
}
CheckLazyDataCompression("C:/Users/jevi/OneDrive - Epinion/Documents/GitHub/claudius")
CheckLazyDataCompression("C:/Users/jevi/OneDrive - Epinion/Documents/GitHub/claudius/data")
CheckLazyDataCompression("C:/Users/jevi/OneDrive - Epinion/Documents/GitHub/claudius/data/baselayer.rda")
CheckLazyDataCompression("C:/Users/jevi/OneDrive - Epinion/Documents/GitHub")
CheckLazyDataCompression("C:/Users/jevi/OneDrive - Epinion/Documents/GitHub/")
CheckLazyDataCompression("claudius")
library(devtools)
library(roxygen2)
CheckLazyDataCompression("claudius")
CheckLazyDataCompression(pkg = "C:/Users/jevi/OneDrive - Epinion/Documents/GitHub/claudius")
document()
check()
check()
library(tibble)
sessionInfo()
